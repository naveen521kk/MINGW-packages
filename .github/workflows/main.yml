name: build

on:
  push:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
          { MSYSTEM: MINGW64, arch: x86_64 },
          { MSYSTEM: MINGW32, arch: i686   }
        ]
    env:
      PACMAN_OPTIONS: "--needed --noconfirm --noprogressbar --overwrite \\*"
      MSYSTEM: ${{ matrix.MSYSTEM }}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          update: false
          install: >-
            base-devel
            intltool
            git
            mingw-w64-${{matrix.arch}}-toolchain
            mingw-w64-${{matrix.arch}}-cmake
            mingw-w64-${{matrix.arch}}-ninja
            mingw-w64-${{matrix.arch}}-double-conversion
            mingw-w64-${{matrix.arch}}-gc
            mingw-w64-${{matrix.arch}}-gsl
            mingw-w64-${{matrix.arch}}-libxslt
            mingw-w64-${{matrix.arch}}-boost
            mingw-w64-${{matrix.arch}}-gtk3
            mingw-w64-${{matrix.arch}}-gtkmm3
            mingw-w64-${{matrix.arch}}-libsoup
            mingw-w64-${{matrix.arch}}-poppler
            mingw-w64-${{matrix.arch}}-potrace
            mingw-w64-${{matrix.arch}}-libvisio
            mingw-w64-${{matrix.arch}}-libwpg
            mingw-w64-${{matrix.arch}}-aspell
            mingw-w64-${{matrix.arch}}-aspell-en
            mingw-w64-${{matrix.arch}}-gspell
            mingw-w64-${{matrix.arch}}-python
            mingw-w64-${{matrix.arch}}-python-pip
            mingw-w64-${{matrix.arch}}-python-lxml
            mingw-w64-${{matrix.arch}}-python-numpy
            mingw-w64-${{matrix.arch}}-python-pillow
            mingw-w64-${{matrix.arch}}-python-six
            mingw-w64-${{matrix.arch}}-python-gobject
            mingw-w64-${{matrix.arch}}-python-pyserial
            mingw-w64-${{matrix.arch}}-python-coverage
            mingw-w64-${{matrix.arch}}-scour
            mingw-w64-${{matrix.arch}}-ccache
            mingw-w64-${{matrix.arch}}-gtest
            mingw-w64-${{matrix.arch}}-ntldd-git
            mingw-w64-${{matrix.arch}}-ghostscript
      - name: clone
        run: |
          mkdir -p "C:\projects\inkscape"
          git clone -q --depth=100 --branch=win32-font https://gitlab.com/naveen521kk/inkscape.git C:\projects\inkscape
          cd "C:\projects\inkscape"
          git checkout -qf ac3aba9dee3da8a02021f54cac2a907f585c918e
          git submodule update --init --recursive
      - name: check
        working-directory: C:\projects\inkscape
        env:
          CHERE_INVOKING : 'yes'
          APPVEYOR_BUILD_FOLDER: C:\projects\inkscape
        shell: cmd
        run: |
          rmdir /S /Q "C:\Program Files\Git"
      - name: build
        working-directory: C:\projects\inkscape
        env:
          CHERE_INVOKING : 'yes'
        shell: msys2 {0}
        run: |
          mkdir build
          cd build
          export FONTCONFIG_FILE=$(cygpath -a fonts.conf)
          cat > "$FONTCONFIG_FILE" <<EOF
          <?xml version="1.0"?>
          <!DOCTYPE fontconfig SYSTEM "fonts.dtd">
          <fontconfig><dir>$(cygpath -aw fonts)</dir></fontconfig>
          EOF
          mkdir fonts
          wget -nv https://github.com/dejavu-fonts/dejavu-fonts/releases/download/version_2_37/dejavu-fonts-ttf-2.37.tar.bz2 \
          && tar -xf dejavu-fonts-ttf-2.37.tar.bz2 --directory=fonts
          message "--- Installing dependencies"
          source ../buildtools/msys2installdeps.sh
          message "--- Configuring the build"
          cmake .. -G Ninja \
              -DCMAKE_C_COMPILER_LAUNCHER="ccache" \
              -DCMAKE_CXX_COMPILER_LAUNCHER="ccache" \
              -DCMAKE_INSTALL_MESSAGE="NEVER" \
              || error "cmake failed"
          message "--- Compiling Inkscape"
          ninja || error "compilation failed"
          message "--- Installing the project"
          ninja install || error "installation failed"
          ninja dist-win-7z-fast

      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: |
            C:\projects\inkscape\build\inkscape*.7z
            C:\projects\inkscape\build\inkscape*.*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ink
          release_name: Release
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: C:\projects\inkscape\build\inkscape*.7z
          asset_name: inkscape.7z
          asset_content_type: application/zip
