name: build

on:
  push:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
          { MSYSTEM: MINGW64, arch: x86_64 },
          { MSYSTEM: MINGW32, arch: i686   }
        ]
    env:
      PACMAN_OPTIONS: "--needed --noconfirm --noprogressbar --overwrite \\*"
      MSYSTEM: ${{ matrix.MSYSTEM }}
    steps:
      - name: clone
        run: |
          mkdir -p "C:\projects\inkscape"
          git clone -q --depth=100 --branch=win32-font https://gitlab.com/naveen521kk/inkscape.git C:\projects\inkscape
          cd "C:\projects\inkscape"
          git checkout -qf ac3aba9dee3da8a02021f54cac2a907f585c918e
          git submodule update --init --recursive
      - name: build
        working-directory: C:\projects\inkscape
        env:
          CHERE_INVOKING : 'yes'
          APPVEYOR_BUILD_FOLDER: C:\projects\inkscape
        shell: cmd
        run: |
          del C:\Windows\System32\libssl-*.dll C:\Windows\system32\libcrypto-*.dll
          del C:\Windows\SysWOW64\libssl-*.dll C:\Windows\SysWOW64\libcrypto-*.dll
          del C:\Windows\SysWOW64\libssl-*.dll C:\Windows\SysWOW64\libcrypto-*.dll
          rmdir /S /Q "C:\Program Files\Git"
          curl -O http://repo.msys2.org/msys/x86_64/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz
          C:\msys64\usr\bin\bash --login -c "pacman -U $(cygpath "C:\projects\inkscape")/msys2-keyring-r21.b39fb11-1-any.pkg.tar.xz %PACMAN_OPTIONS%"
          C:\msys64\usr\bin\pacman -Sy pacman %PACMAN_OPTIONS%
          C:\msys64\usr\bin\pacman -Syuu %PACMAN_OPTIONS%
          C:\msys64\usr\bin\bash --login -c "/c/projects/inkscape/buildtools/appveyor.sh"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ink
          release_name: Release
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: C:\projects\inkscape\build\inkscape*.7z
          asset_name: inkscape.7z
          asset_content_type: application/zip
